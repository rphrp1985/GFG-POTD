class Solution {
  public:
    vector<int> max_of_subarrays(vector<int> arr, int n, int k) {
        
        
        
        
        priority_queue<int> pq;
        
        
        unordered_map<int,int> mp;
        
        for(int i=0;i<k-1;i++)
        {
            pq.push(arr[i]);
            mp[arr[i]]++;
        }
        vector<int> v;
        for(int i=k-1;i<n;i++)
        {
            pq.push(arr[i]);
            mp[arr[i]]++;
            
            while(pq.size()!=0){
                // cout<<pq.top()<<endl;
                if(mp[pq.top()]==0)
                pq.pop();
                else
                break;
                
            }
            // cout<<pq.size();
            v.push_back(pq.top());
            mp[arr[i-k+1]]--;
            
        }
        
        
        
        return v;
        
        
        
        // your code here
    }
};
